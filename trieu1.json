{
	"info": {
		"_postman_id": "db313ee5-971a-4150-a493-b789d12d7897",
		"name": "PickPackChung",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37376642"
	},
	"item": [
		{
			"name": "Login WMS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"token\", pm.response.json().token)\r",
							"pm.collectionVariables.set(\"email\", JSON.parse(request.data).email)\r",
							"pm.collectionVariables.set(\"user_id\", pm.response.json().user.user_id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"sonplh1@hasaki.vn\",\n  \"password\": \"123456a\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/auth/user/login",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"auth",
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Discord",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"token_discord\", pm.response.json().token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"sonplh@hasaki.vn\",\r\n    \"password\": \"12345a@A\",\r\n    \"undelete\": false,\r\n    \"login_source\": null,\r\n    \"gift_code_sku_id\": null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://discord.com/api/v9/auth/login",
					"protocol": "https",
					"host": [
						"discord",
						"com"
					],
					"path": [
						"api",
						"v9",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reset cart of user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token_discord}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"!reset_cart_by_email {{email}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://discord.com/api/v9/channels/1134696880668942447/messages",
					"protocol": "https",
					"host": [
						"discord",
						"com"
					],
					"path": [
						"api",
						"v9",
						"channels",
						"1134696880668942447",
						"messages"
					]
				}
			},
			"response": []
		},
		{
			"name": "Ready Pick",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "authorization",
						"value": "{{token_discord}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mobile_network_type\": \"unknown\",\r\n    \"content\": \"!readypick {{shipment_number}}\",\r\n    \"tts\": false,\r\n    \"flags\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://discord.com/api/v9/channels/1134696880668942447/messages",
					"protocol": "https",
					"host": [
						"discord",
						"com"
					],
					"path": [
						"api",
						"v9",
						"channels",
						"1134696880668942447",
						"messages"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"// Check if records array is present and has at least one item\r",
							"if (responseData.records && responseData.records.length > 0) {\r",
							"    // Get the first outbound_order_id\r",
							"    let outboundOrderId = responseData.records[0].outbound_order_id;\r",
							"    let warehouse_id = responseData.records[0].warehouse_id;\r",
							"\r",
							"    // Set it as a collection variable\r",
							"    pm.collectionVariables.set(\"order_id\", outboundOrderId);\r",
							"    pm.collectionVariables.set(\"warehouse_id\", warehouse_id);\r",
							"\r",
							"    // Log the outbound_order_id to confirm\r",
							"    console.log(\"outbound_order_id set to:\", outboundOrderId);\r",
							"} else {\r",
							"    console.log(\"No records found in the response.\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound/outbound-orders?page=1&size=1&sales_order_numbers={{shipment_number}}&config_query=1",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound",
						"outbound-orders"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "size",
							"value": "1"
						},
						{
							"key": "sales_order_numbers",
							"value": "{{shipment_number}}"
						},
						{
							"key": "config_query",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order WMS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Lấy dữ liệu từ body\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"// Mảng để lưu trữ sku và qty của từng sản phẩm\r",
							"let skuAndQtyList = [];\r",
							"\r",
							"// Duyệt qua các records\r",
							"responseData.records.forEach(record => {\r",
							"\r",
							"    // Lưu thông tin SKU và quantity vào mảng\r",
							"    skuAndQtyList.push({\r",
							"        sku: record.sku,\r",
							"        quantity: record.quantity\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"// Lưu kết quả để dùng trong các request tiếp theo (nếu cần)\r",
							"pm.collectionVariables.set(\"skues_quantities\", JSON.stringify(skuAndQtyList));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "sec-ch-ua-platform",
						"value": "\"Windows\""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzUyODI0MDksInN1YiI6MTczNjIsIkVtYWlsIjoic29ucGxoMkBoYXNha2kudm4ifQ.U0DiL9F3gL8wd2A7ZKIeZcYbQJItt3vtGgKIGdstH-Y"
					},
					{
						"key": "Access-Control-Expose-Headers",
						"value": "Authorization"
					},
					{
						"key": "Referer",
						"value": "https://wms-qc.inshasaki.com/"
					},
					{
						"key": "Accept-Language",
						"value": "en"
					},
					{
						"key": "sec-ch-ua",
						"value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "Access-Control-Allow-Origin",
						"value": "*"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
					},
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*"
					}
				],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound/outbound-order-items/detail-by-outbound-order?page=1&size=1&outbound_order_ids={{order_id}}",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound",
						"outbound-order-items",
						"detail-by-outbound-order"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "size",
							"value": "1"
						},
						{
							"key": "outbound_order_ids",
							"value": "{{order_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"cart_code\", pm.response.json().records[0].cart_code)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/cart?page=1&size=1&status_ids=1&warehouse_ids={{warehouse_id}}",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound-orders",
						"cart"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "size",
							"value": "1"
						},
						{
							"key": "status_ids",
							"value": "1"
						},
						{
							"key": "warehouse_ids",
							"value": "{{warehouse_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create picking group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response JSON\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"if (responseData.message) {\r",
							"    let responseMessage = responseData.message;\r",
							"\r",
							"    // Sử dụng regex để tìm và lấy giá trị bên trong dấu []\r",
							"    let match = responseMessage.match(/\\[(\\d+)\\]/);\r",
							"\r",
							"    // Kiểm tra nếu tìm thấy giá trị bên trong []\r",
							"    if (match && match[1]) {\r",
							"        let basketId = match[1];\r",
							"\r",
							"        // Gửi yêu cầu đến Discord\r",
							"        pm.sendRequest({\r",
							"            url: 'https://discord.com/api/v9/channels/1134696880668942447/messages',\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'authorization': pm.collectionVariables.get('token_discord'),\r",
							"                'Content-Type': 'application/json',\r",
							"                'Cookie': '__cfruid=65b9f1f46ca0b8355c91f8960bd41a4ca632fcf8-1730957631; __dcfduid=598ea6ce9cb011efa1629acbd9cf2b97; __sdcfduid=598ea6ce9cb011efa1629acbd9cf2b9743bebd442f24e64a8e66c87b0d21577fb413d1575f6e02b68cdb651eb0d1a68e; _cfuvid=Bzy972ePB5wJyYapRBeN5G0fPqk8EUXerpjJ_8r1jMc-1730957631414-0.0.1.1-604800000'\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify({\r",
							"                    mobile_network_type: \"unknown\",\r",
							"                    content: \"!resetcart \" + basketId,\r",
							"                    tts: false,\r",
							"                    flags: 0\r",
							"                })\r",
							"            }\r",
							"        }, function (err, discordRes) {\r",
							"            if (err) {\r",
							"                console.log(\"Error sending request to Discord:\", err);\r",
							"            } else {\r",
							"                console.log(\"Discord API Response:\", discordRes.json());\r",
							"\r",
							"                // Gửi yêu cầu đến API tạo nhóm đơn hàng\r",
							"                pm.sendRequest({\r",
							"                    url: 'https://ff-auth-test.inshasaki.com/api/v1/wms/pick-pack/orders/picking-group/create',\r",
							"                    method: 'POST',\r",
							"                    header: {\r",
							"                        'Content-Type': 'application/json',\r",
							"                        'Authorization': 'Bearer ' + pm.collectionVariables.get('token')\r",
							"                    },\r",
							"                    body: {\r",
							"                        mode: 'raw',\r",
							"                        raw: JSON.stringify({\r",
							"                            warehouse_id: parseInt(pm.collectionVariables.get('warehouse_id'), 10),\r",
							"                            shipping_unit_id: parseInt(pm.collectionVariables.get('shipping_unit_id'), 10),\r",
							"                            user_id: parseInt(pm.collectionVariables.get('user_id'), 10),\r",
							"                            cart_code: pm.collectionVariables.get('cart_code'),\r",
							"                            num_group: 1,\r",
							"                            num_order: 1\r",
							"                        })\r",
							"                    }\r",
							"                }, function (err, apiRes) {\r",
							"                    if (err) {\r",
							"                        console.log(\"Lỗi khi gửi yêu cầu đến API: \", err);\r",
							"                    } else {\r",
							"                        // Lấy picking_group_id từ phản hồi API\r",
							"                        let apiResponseData = apiRes.json();\r",
							"                        let picking_group_id = apiResponseData.picking_group_id;\r",
							"\r",
							"                        // Lưu picking_group_id vào Collection Variable\r",
							"                        pm.collectionVariables.set(\"picking_group_id\", picking_group_id);\r",
							"                        console.log(\"API đã gọi thành công, mã phản hồi: \", apiRes.status);\r",
							"                        console.log(\"Phản hồi từ API: \", apiResponseData);\r",
							"                    }\r",
							"                });\r",
							"            }\r",
							"        });\r",
							"\r",
							"    } else {\r",
							"        console.log(\"Không tìm thấy giá trị basketId trong message.\");\r",
							"    }\r",
							"} else {\r",
							"    console.log(\"Không có message trong phản hồi.\");\r",
							"    \r",
							"    // Nếu không có message nhưng có picking_group_id\r",
							"    let picking_group_id = responseData.picking_group_id;\r",
							"    pm.collectionVariables.set(\"picking_group_id\", picking_group_id);\r",
							"    console.log(\"picking_group_id:\", picking_group_id);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"warehouse_id\": {{warehouse_id}},\r\n    \"shipping_unit_id\": {{shipping_unit_id}},\r\n    \"user_id\": {{user_id}},\r\n    \"cart_code\": \"{{cart_code}}\",\r\n    \"num_group\": 1,\r\n    \"num_order\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/pick-pack/orders/picking-group/create",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"pick-pack",
						"orders",
						"picking-group",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Order to Picking Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/pick-pack/orders/picking-group/validate-outbound?keyword={{shipment_number}}&warehouse_id={{warehouse_id}}&picking_group_id={{picking_group_id}}",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"pick-pack",
						"orders",
						"picking-group",
						"validate-outbound"
					],
					"query": [
						{
							"key": "keyword",
							"value": "{{shipment_number}}"
						},
						{
							"key": "warehouse_id",
							"value": "{{warehouse_id}}"
						},
						{
							"key": "picking_group_id",
							"value": "{{picking_group_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get My Picking Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"group_id\", pm.response.json().records[0][\"group_id\"])"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/picking-group/group/me",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound-orders",
						"picking-group",
						"group",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"group_id\": {{group_id}},\r\n    \"outbound_order_ids\": \"{{order_id}}\",\r\n    \"user_id\": {{user_id}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/picking-group/start",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound-orders",
						"picking-group",
						"start"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Picking Group By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Lấy dữ liệu từ response\r",
							"let responseData = pm.response.json();\r",
							"\r",
							"// Kiểm tra xem có mảng not_pick_items hay không\r",
							"if (responseData.not_pick_items && responseData.not_pick_items.length > 0) {\r",
							"    // Duyệt qua từng item trong mảng not_pick_items và lấy quantity và pg_code\r",
							"    let itemsData = responseData.not_pick_items.map(item => {\r",
							"        return {\r",
							"            quantity: item.quantity,\r",
							"            pg_code: item.pg_code\r",
							"        };\r",
							"    });\r",
							"\r",
							"    // Chuyển đổi mảng thành chuỗi JSON để lưu vào biến collection\r",
							"    pm.collectionVariables.set(\"quantities_pgcodes\", JSON.stringify(itemsData));\r",
							"\r",
							"    // Kiểm tra và in ra console\r",
							"    console.log(\"Dữ liệu quantity và pg_code đã được lưu vào collection variable:\", itemsData);\r",
							"} else {\r",
							"    console.log(\"Không có dữ liệu trong not_pick_items.\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/picking-group/tracking/by-group/{{group_id}}",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound-orders",
						"picking-group",
						"tracking",
						"by-group",
						"{{group_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Picks",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"items\": {{quantities_pgcodes}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/picking-group/tracking/pick-many-v1",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound-orders",
						"picking-group",
						"tracking",
						"pick-many-v1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Camera Code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"camera_code\", pm.response.json().records[0].camera_code)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/cameras?page=1&size=20&warehouse_ids={{warehouse_id}}&status_ids=1",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"cameras"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "size",
							"value": "20"
						},
						{
							"key": "warehouse_ids",
							"value": "{{warehouse_id}}"
						},
						{
							"key": "status_ids",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Start Packing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"packing_id\", pm.response.json()[\"packing_id\"]);\r",
							"\r",
							"let skues_quantities = pm.collectionVariables.get(\"skues_quantities\");\r",
							"\r",
							"// In ra dữ liệu để kiểm tra giá trị trước khi xử lý\r",
							"console.log(\"Dữ liệu list_data:\", skues_quantities);\r",
							"\r",
							"// Nếu dữ liệu là chuỗi (với dấu \" ở đầu và cuối), chuyển đổi nó thành mảng\r",
							"if (typeof skues_quantities === \"string\") {\r",
							"    try {\r",
							"        // Loại bỏ dấu \" đầu và cuối (nếu có) và chuyển thành mảng\r",
							"        skues_quantities = JSON.parse(skues_quantities);\r",
							"    } catch (e) {\r",
							"        console.error(\"Lỗi khi chuyển chuỗi JSON thành mảng:\", e);\r",
							"    }\r",
							"}\r",
							"\r",
							"// Kiểm tra dữ liệu sau khi chuyển đổi\r",
							"console.log(\"Dữ liệu sau khi chuyển đổi:\", skues_quantities);\r",
							"\r",
							"// Kiểm tra nếu dữ liệu là mảng hợp lệ\r",
							"if (Array.isArray(skues_quantities) && skues_quantities.length > 0) {\r",
							"    let now = new Date();\r",
							"    let serialNumbers = [];\r",
							"    skues_quantities.forEach(item => {\r",
							"\r",
							"        for (let i = 0; i < item.quantity; i++) {\r",
							"            // let temp = now.getTime()+''+i\r",
							"            // if (temp.length < 20){\r",
							"            //     let count = 20 - temp.length\r",
							"            //     for(let j = 0; j < count; j++){\r",
							"            //         temp+=''+0\r",
							"            //     }\r",
							"            // }\r",
							"            let temp = item.sku + '' + now.getTime() + '' + i\r",
							"            serialNumbers.push(temp);\r",
							"        }\r",
							"\r",
							"        console.log(serialNumbers)\r",
							"\r",
							"        // Dữ liệu API cần gọi\r",
							"        let outboundData = {\r",
							"            \"outbound_order_id\": pm.collectionVariables.get(\"order_id\"),\r",
							"            \"quantity\": item.quantity, // Sử dụng quantity đã chuyển\r",
							"            \"sku\": item.sku,\r",
							"            \"serial_numbers\": serialNumbers\r",
							"        };\r",
							"\r",
							"        // Gửi yêu cầu POST đến API\r",
							"        pm.sendRequest({\r",
							"            url: 'https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/packing/pack',\r",
							"            method: 'POST',\r",
							"            header: {\r",
							"                'accept': 'application/json',\r",
							"                'Content-Type': 'application/json',\r",
							"                'Authorization': 'Bearer ' + pm.collectionVariables.get(\"token\")\r",
							"            },\r",
							"            body: {\r",
							"                mode: 'raw',\r",
							"                raw: JSON.stringify(outboundData)\r",
							"            }\r",
							"        }, function (err, res) {\r",
							"            if (err) {\r",
							"                console.log(\"Lỗi khi gọi API: \", err);\r",
							"            } else {\r",
							"                console.log(\"API đã được gọi thành công với mã phản hồi: \", res.status);\r",
							"                console.log(\"Phản hồi từ API: \", res.json());\r",
							"            }\r",
							"        });\r",
							"\r",
							"        serialNumbers = []\r",
							"    });\r",
							"} else {\r",
							"    console.log(\"Dữ liệu không phải là mảng hợp lệ.\");\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/packing/by-cart/v2?cart_code={{cart_code}}&camera_code={{camera_code}}",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound-orders",
						"packing",
						"by-cart",
						"v2"
					],
					"query": [
						{
							"key": "cart_code",
							"value": "{{cart_code}}"
						},
						{
							"key": "camera_code",
							"value": "{{camera_code}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Packed",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"box_type\": \"string\",\n  \"outbound_order_id\": {{order_id}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/packing/complete",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound-orders",
						"packing",
						"complete"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get receipt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"tracking_code\", pm.response.json()[\"tracking_code\"])"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/outbound-orders/packing/receipt?outbound_order_id={{order_id}}",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"outbound-orders",
						"packing",
						"receipt"
					],
					"query": [
						{
							"key": "outbound_order_id",
							"value": "{{order_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "input tracking code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set('shipment_number', 0);\r",
							"pm.collectionVariables.unset('sku');\r",
							"pm.collectionVariables.unset('quantity');\r",
							"pm.collectionVariables.unset('order_id');\r",
							"pm.collectionVariables.unset('cart_code');\r",
							"pm.collectionVariables.unset('picking_group_id');\r",
							"pm.collectionVariables.unset('outbound_order_id');\r",
							"pm.collectionVariables.unset('group_id');\r",
							"pm.collectionVariables.unset('pg_code');\r",
							"pm.collectionVariables.unset('camera_code');\r",
							"pm.collectionVariables.unset('packing_id');\r",
							"pm.collectionVariables.unset('tracking_code');\r",
							"pm.collectionVariables.unset('quantities_pgcodes');\r",
							"pm.collectionVariables.unset('skues_quantities');\r",
							"pm.collectionVariables.unset('warehouse_id');"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"packing_id\": {{packing_id}},\r\n    \"package_status\": 4,\r\n    \"so_packed_code\": \"{{tracking_code}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ff-auth-test.inshasaki.com/api/v1/wms/packings/{{packing_id}}/package_status",
					"protocol": "https",
					"host": [
						"ff-auth-test",
						"inshasaki",
						"com"
					],
					"path": [
						"api",
						"v1",
						"wms",
						"packings",
						"{{packing_id}}",
						"package_status"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "shipping_unit_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "shipment_number",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "token_discord",
			"value": ""
		}
	]
}